// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  uuid       String     @unique @default(uuid())
  email      String     @unique
  nickname   String?
  password   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  notes      Note[]
  noteItems  NoteItem[]
  strategies Strategy[]
  audits     Audit[]

  @@index([email])
}

model Note {
  id          Int       @id @default(autoincrement())
  title       String
  discardedAt DateTime?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  noteItems  NoteItem[]
  strategies Strategy[]
  audits     Audit[]

  @@index([userId, discardedAt])
}

model NoteItem {
  id    Int    @id @default(autoincrement())
  title String
  cover String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  note   Note @relation(fields: [noteId], references: [id])
  noteId Int

  strategy   Strategy @relation(fields: [strategyId], references: [id])
  strategyId Int

  audits Audit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, noteId])
}

model Strategy {
  id           Int    @id @default(autoincrement())
  source       String
  name         String
  mode         String
  attrSelector String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  note   Note @relation(fields: [noteId], references: [id])
  noteId Int

  noteItems NoteItem[]
  audits    Audit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, noteId])
}

model Audit {
  id Int @id @default(autoincrement())

  auditableId   Int
  auditableType String

  action         String
  auditedChanges String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int

  NoteItem   NoteItem? @relation(fields: [noteItemId], references: [id])
  noteItemId Int?

  Note       Note?     @relation(fields: [noteId], references: [id])
  noteId     Int?
  Strategy   Strategy? @relation(fields: [strategyId], references: [id])
  strategyId Int?

  @@index([auditableType, auditableId, createdAt, userId])
}
